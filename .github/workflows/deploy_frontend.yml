name: Deploy Frontend

on:
  push:
    branches: [ main, staging, frontend ]
    paths:
      - 'frontend/**'
      - '.github/workflows/deploy_frontend.yml'
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Print Environment Variables and Secrets
      shell: bash
      run: |
        printf "\033[31mREACT_APP_API_URL=${{ secrets.REACT_APP_API_URL }}\033[0m\n"
        printf "\033[31mREACT_APP_ENVIRONMENT=${{ secrets.REACT_APP_ENVIRONMENT }}\033[0m\n"
        # Uncomment the following line to print GITHUB_TOKEN (not recommended)
        # printf "\033[31mGITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}\033[0m\n"

    - name: Install dependencies
      shell: bash
      run: |
        cd frontend
        if ! npm ci; then
          printf "\033[31mInstall dependencies step failed.\033[0m\n"
          exit 1
        fi

    - name: Build
      shell: bash
      env:
        REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}
        REACT_APP_ENVIRONMENT: ${{ secrets.REACT_APP_ENVIRONMENT }}
      run: |
        cd frontend
        if ! npm run build; then
          printf "\033[31mBuild step failed.\033[0m\n"
          exit 1
        fi

    - name: Setup Pages
      uses: actions/configure-pages@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
      continue-on-error: true

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './frontend/build'
      continue-on-error: true

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
      continue-on-error: true

    # This step runs when any previous step fails
    - name: Build Failed
      if: failure()
      shell: bash
      run: |
        printf "\033[31mBuild failed.\033[0m\n"
        exit 1

    # This step runs when all previous steps succeed
    - name: Build Succeeded
      if: success()
      run: echo "Build succeeded."
