name: Deploy Backend to GCP

on:
  push:
    branches: 
      - main
      - backend
    paths:
      - 'backend/**'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set Up Environment Variables
      run: |
        # Check if running in GitHub Actions
        if [ -z "$GITHUB_ACTIONS" ]; then
          echo "Loading environment variables from .env file"
          export $(grep -v '^#' .env | xargs)
        fi

    - name: Debug GCP Credentials
      run: |
        echo "Length of GCP_SA_KEY: ${#GCP_SA_KEY}"
        echo "First 10 characters of GCP_SA_KEY: ${GCP_SA_KEY:0:10}..."
        echo "Last 10 characters of GCP_SA_KEY: ${GCP_SA_KEY: -10}"
        echo "Is GCP_SA_KEY valid base64?"
        echo "$GCP_SA_KEY" | base64 -d > /dev/null 2>&1 && echo "Yes" || echo "No"
      env:
        GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}

    - name: Set up GCP Credentials
      run: |
        mkdir -p backend/creds
        echo '${{ secrets.GCP_SA_KEY }}' | base64 -d > backend/creds/gcp-sa-key.json
        chmod 600 backend/creds/gcp-sa-key.json
        echo "First 10 characters of decoded JSON:"
        head -c 10 backend/creds/gcp-sa-key.json

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ github.workspace }}/backend/creds/gcp-sa-key.json
        export_default_credentials: true

    - name: Build Docker Image
      run: |
        docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/personal-website-backend:latest ./backend

    - name: Push Docker Image to GCP Container Registry
      run: |
        gcloud auth configure-docker
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/personal-website-backend:latest

    - name: Deploy to GCP
      env:
        GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      run: |
        cd backend
        chmod +x ./deploy_to_gcp.sh
        ./deploy_to_gcp.sh

    - name: Clean up
      if: always()
      run: rm -f backend/creds/gcp-sa-key.json
