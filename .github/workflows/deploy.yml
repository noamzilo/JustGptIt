name: Deploy Backend to GCP

on:
  push:
    branches: 
      - main
      - backend
    paths:
      - 'backend/**'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    container:
      image: node:16
    defaults:
      run:
        working-directory: ./backend

    steps:
    - uses: actions/checkout@v2

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Install gcloud cli
      run: |
        curl -sSL https://sdk.cloud.google.com | bash
        exec -l $SHELL
        gcloud components install kubectl

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Set up GCP Credentials
      env:
        GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
      run: |
        echo "$GCP_SA_KEY" | base64 -d > /tmp/gcp-key.json
        gcloud auth activate-service-account --key-file=/tmp/gcp-key.json
        gcloud config set project ${{ secrets.GCP_PROJECT_ID }}

    - name: Configure Docker to use GCloud credentials
      run: |
        gcloud auth configure-docker gcr.io --quiet

    - name: Build and push Docker Image
      uses: docker/build-push-action@v2
      with:
        context: ./backend
        push: true
        tags: gcr.io/${{ secrets.GCP_PROJECT_ID }}/personal-website-backend:latest
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new

    # This step is necessary if you want to make the cache available for subsequent runs
    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache

    - name: Deploy to Cloud Run
      run: |
        PROJECT_ID="${{ secrets.GCP_PROJECT_ID }}"
        REGION="us-central1"
        SERVICE_NAME="personal-website-backend"
        GCR_IMAGE_NAME="gcr.io/${PROJECT_ID}/personal-website-backend"
        SERVICE_ACCOUNT="personal-website-deployer@${PROJECT_ID}.iam.gserviceaccount.com"

        gcloud run deploy $SERVICE_NAME \
          --image ${GCR_IMAGE_NAME}:latest \
          --project $PROJECT_ID \
          --region $REGION \
          --platform managed \
          --allow-unauthenticated \
          --set-env-vars="DEBUG=1,GOOGLE_APPLICATION_CREDENTIALS=/app/gcp-credentials.json" \
          --port=8080 \
          --service-account=$SERVICE_ACCOUNT

    - name: Print Service URL
      run: |
        SERVICE_NAME="personal-website-backend"
        PROJECT_ID="${{ secrets.GCP_PROJECT_ID }}"
        REGION="us-central1"

        echo -e "\033[0;31mFetching Cloud Run service URL...\033[0m"
        gcloud run services describe $SERVICE_NAME \
          --project $PROJECT_ID \
          --region $REGION \
          --format="value(status.url)"

    - name: Clean up
      if: always()
      run: rm -f /tmp/gcp-key.json
